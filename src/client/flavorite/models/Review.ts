/* tslint:disable */
/* eslint-disable */
/**
 * Flavorite - OpenAPI 3.0
 * This is a Flavorite Server based on the OpenAPI 3.0 specification.
 *
 * The version of the OpenAPI document: 1.1.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Restaurant,
    RestaurantFromJSON,
    RestaurantFromJSONTyped,
    RestaurantToJSON,
    User,
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
} from './';

/**
 * 
 * @export
 * @interface Review
 */
export interface Review {
    /**
     * 
     * @type {string}
     * @memberof Review
     */
    id: string;
    /**
     * 
     * @type {User}
     * @memberof Review
     */
    user: User;
    /**
     * 
     * @type {Restaurant}
     * @memberof Review
     */
    restaurant: Restaurant;
    /**
     * 
     * @type {number}
     * @memberof Review
     */
    rating: number;
    /**
     * 
     * @type {string}
     * @memberof Review
     */
    content?: string;
    /**
     * 
     * @type {string}
     * @memberof Review
     */
    photoUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof Review
     */
    favoriteFood: string;
    /**
     * 
     * @type {boolean}
     * @memberof Review
     */
    starred: boolean;
    /**
     * 
     * @type {string}
     * @memberof Review
     */
    createdAt: string;
    /**
     * 
     * @type {string}
     * @memberof Review
     */
    updatedAt: string;
}

export function ReviewFromJSON(json: any): Review {
    return ReviewFromJSONTyped(json, false);
}

export function ReviewFromJSONTyped(json: any, ignoreDiscriminator: boolean): Review {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'user': UserFromJSON(json['user']),
        'restaurant': RestaurantFromJSON(json['restaurant']),
        'rating': json['rating'],
        'content': !exists(json, 'content') ? undefined : json['content'],
        'photoUrl': !exists(json, 'photoUrl') ? undefined : json['photoUrl'],
        'favoriteFood': json['favoriteFood'],
        'starred': json['starred'],
        'createdAt': json['createdAt'],
        'updatedAt': json['updatedAt'],
    };
}

export function ReviewToJSON(value?: Review | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'user': UserToJSON(value.user),
        'restaurant': RestaurantToJSON(value.restaurant),
        'rating': value.rating,
        'content': value.content,
        'photoUrl': value.photoUrl,
        'favoriteFood': value.favoriteFood,
        'starred': value.starred,
        'createdAt': value.createdAt,
        'updatedAt': value.updatedAt,
    };
}


